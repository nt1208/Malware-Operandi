import os
import re
import subprocess
import xml.etree.ElementTree as ET

def decompile_apk(apk_path, output_directory):
    subprocess.run(["apktool", "d", apk_path, "-o", output_directory, "-f"], check=True)

def extract_permissions(manifest_path):
    permissions = []
    try:
        manifest = ET.parse(manifest_path)
        root = manifest.getroot()
        for perm in root.findall('uses-permission'):
            permission_name = perm.get('{http://schemas.android.com/apk/res/android}name')
            permissions.append(permission_name)
    except Exception as e:
        print(f"Error extracting permissions from {manifest_path}: {e}")
    return permissions
    
def extract_text_features(output_directory):
    try:
        output = subprocess.check_output(['grep', '-rE', 'crypto|Cipher|cipher|wake|lock|locker', output_directory])
        return extract_important_info_text(output.decode())  # Trả về chuỗi đầy đủ từ kết quả grep
    except Exception as e:
        print(f"Error extracting text features: {e}")
        return ""  # Trả về chuỗi rỗng nếu có lỗi

def extract_important_info_text(grep_output):
    important_info = []
    lines = grep_output.splitlines()
    for line in lines:
        # Sử dụng biểu thức chính quy để lọc ra phần bạn quan tâm
        match = re.search(r'(?<=:)(.*?);', line)
        if match:
            important_info.append(match.group())
    return important_info
    
def extract_important_info(grep_output):
    important_info = []
    lines = grep_output.splitlines()
    seen = set()
    for line in lines:
        # Tìm các chuỗi URL, địa chỉ IP, email trong dòng
        matches = re.findall(r'https?://[^\s]+|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+|[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}', line)
        for match in matches:
            if match not in seen:
                seen.add(match)
                important_info.append((match))
    return important_info

def extract_network_features(output_directory):
    try:
        grep_command = [
            'grep', '-rE',
            'https?://|[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+|[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}',
            output_directory
        ]
        output = subprocess.run(grep_command, capture_output=True, text=True)
        important_info = extract_important_info(output.stdout)
        return important_info
    except Exception as e:
        print(f"Error extracting network features: {e}")
        return "Loi"

def process_apk(apk_path):
    try:
        apk_name = os.path.basename(apk_path)  # Lấy tên thư mục từ đường dẫn
        output_directory = apk_name + ".out"
        decompile_apk(apk_path, output_directory)
        manifest_path = os.path.join(output_directory, "AndroidManifest.xml")
        permissions = extract_permissions(manifest_path)
        network = extract_network_features(output_directory)
        text_features = extract_text_features(output_directory)
        return {
            'apk_name': apk_name,
            'permissions': permissions,
            'network': network,
            'text': text_features
        }
    except Exception as e:
        print(f"Error processing APK {apk_path}: {e}")
        return None

# Đường dẫn tới thư mục chứa các file APK
apk_directory = '/home/kali/NT230/RansomwareAndroid/apk4/'

# Lấy danh sách các file APK
apk_files = [os.path.join(apk_directory, f) for f in os.listdir(apk_directory) ]

# Xử lý từng file APK
results = []
for apk_file in apk_files:
    result = process_apk(apk_file)
    if result:
        results.append(result)

# In kết quả
for result in results:
    print(result)

# Đường dẫn tới tệp văn bản để lưu kết quả
output1_file = "feature_per.txt"
output2_file = "feature_net.txt"
output3_file = "feature_text.txt"

# Mở tệp văn bản để ghi dữ liệu
with open(output1_file, "w") as file:
    # Xử lý từng kết quả và ghi vào tệp văn bản
    for result in results:
        file.write(f"{', '.join(result['permissions'])}\n")
with open(output2_file, "w") as file:
    # Xử lý từng kết quả và ghi vào tệp văn bản
    for result in results:
        file.write(f"{result['network']}\n")
with open(output3_file, "w") as file:
    # Xử lý từng kết quả và ghi vào tệp văn bản
    for result in results:
        file.write(f"{result['text']}\n")
  

